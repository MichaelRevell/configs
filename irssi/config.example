servers = (
  {
    address = "jabber.crowdtilt.com";
    chatnet = "CT";
    password = "XXXXXX";
    autoconnect = "yes";
  },
  {
    address = "irc.freenode.net";
    chatnet = "Freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  { address = "open.ircnet.net"; chatnet = "IRCnet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "irc.oftc.net"; chatnet = "OFTC"; port = "6667"; },
  {
    address = "irc.gamesurge.net";
    chatnet = "GameSurge";
    port = "6667";
  },
  { address = "irc.webchat.org"; chatnet = "WebChat"; port = "6667"; },
  { address = "irc.rizon.net"; chatnet = "Rizon"; port = "6667"; },
  { address = "irc.link-net.org"; chatnet = "LinkNet"; port = "6667"; },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; }
);

chatnets = {
  CT = { type = "XMPP"; nick = "michael.revell@crowdtilt.com"; };
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  Freenode = {
    type = "IRC";
    nick = "MachinShin";
    autosendcmd = "/msg NickServ identify ********; wait 2000";
  };
  SILC = { type = "SILC"; };
  Undernet = { type = "IRC"; };
  DALnet = { type = "IRC"; };
  QuakeNet = { type = "IRC"; };
  OFTC = { type = "IRC"; };
  GameSurge = { type = "IRC"; };
  WebChat = { type = "IRC"; };
  Rizon = { type = "IRC"; };
  LinkNet = { type = "IRC"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; },
  { name = "#vim"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#perl"; chatnet = "Freenode"; autojoin = "yes"; },
  {
    name = "crowdtilt@conference.jabber.crowdtilt.com";
    chatnet = "CT";
    autojoin = "yes";
  }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "/window goto";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "/window name";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
  sbg = "/scrollback goto";
  o = "openurl";
  wg = "/window goto";
  wnu = "/window number";
  wm = "window move";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        xmpp_composing = { alignment = "right"; };
        usercount = { alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      placement = "top";
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Michael Revell";
    user_name = "Mars";
    nick = "Mars";
    timestamp_format = "%H:%M:%S";
    recode_autodetect_utf8 = "yes";
    recode_fallback = "CP1252";
    log_timestamp = "%H:%M:%S";
    rawlog_lines = "1000";
  };
  "fe-text" = {
    actlist_sort = "refnum";
    term_force_colors = "yes";
    indent = "10";
    mirc_blink_fix = "yes";
  };
  "fe-common/core" = {
    use_status_window = "yes";
    autocreate_windows = "yes";
    autoclose_windows = "no";
    reuse_unused_windows = "yes";
    autocreate_own_query = "yes";
    window_history = "yes";
    show_own_nickchange_once = "yes";
    theme = "chaves";
    autolog = "yes";
    autolog_path = "~/.irssi/logs/$chatnet/$0.log";
    beep_when_window_active = "yes";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    bell_beeps = "yes";
    show_nickmode = "yes";
    completion_char = ":";
    windows_auto_renumber = "yes";
    show_nickmode_empty = "no";
    use_msgs_window = "no";
    print_active_channel = "yes";
    window_auto_change = "yes";
    activity_msg_level = "PUBLIC MSGS DCCMSGS";
    autolog_colors = "yes";
  };
  "irc/core" = { alternate_nick = "MachinShi"; skip_motd = "no"; };
  "xmpp/core" = {
    xmpp_set_nick_as_username = "yes";
    xmpp_history_maxstanzas = "999999999";
  };
  "fe-common/xmpp" = { xmpp_timestamp_format = "%H:%M:%S"; };
  "perl/core/scripts" = {
    awl_block = "80";
    awl_sbar_maxlength = "yes";
    awl_maxlines = "6";
    awl_display_key = "$N$H$C$S";
    awl_display_nokey = "$N$H$C$S";
    awl_display_key_active = "%w%1%9$N$H$C$S%n";
    awl_display_nokey_active = "%w%1%9$N$H$C$S%n";
    awl_placement = "top";
    awl_columns = "4";
    splitlong_line_start = "$";
    splitlong_line_end = "|";
    usercount_show_zero = "no";
    usercount_show_halfops = "yes";
    usercount_show_ircops = "yes";
    awl_prefer_name = "yes";
    nicklist_height = "169";
    nicklist_width = "15";
    url_command = "\"open -a Firefox __URL__\"";
    url_hilight = "yes";
    url_file = " ~/.irssi/url_list.html";
    openurl_app_http = " open -g -a Google\\ Chrome \"$1\"";
    neat_colorize = "yes";
    neat_left_actions = "yes";
    neat_left_messages = "yes";
    neat_allow_shrinking = "yes";
    trackbar_style = "%R";
    trackbar_string = "~";
    openurl_max_urls = "500";
    neat_colors = "rRgGyYmMcCpPwW12356789U";
    neat_right_mode = "no";
  };
  "fe-common/irc" = { netsplit_max_nicks = "10"; };
};
hilights = ( { text = "MachinShin"; nick = "yes"; word = "yes"; } );
logs = { };
ignores = ( { level = "JOINS PARTS QUITS"; } );
keyboard = (
  { key = "meta2-P"; id = "key"; data = "F1"; },
  { key = "meta2-Q"; id = "key"; data = "F2"; },
  { key = "meta2-R"; id = "key"; data = "F3"; },
  { key = "meta2-S"; id = "key"; data = "F4"; },
  { key = "meta2-15~"; id = "key"; data = "F5"; },
  { key = "meta2-17~"; id = "key"; data = "F6"; },
  { key = "meta2-18~"; id = "key"; data = "F7"; },
  { key = "meta2-19~"; id = "key"; data = "F8"; },
  { key = "meta2-20~"; id = "key"; data = "F9"; },
  { key = "meta2-21~"; id = "key"; data = "F10"; },
  { key = "meta2-24~"; id = "key"; data = "F12"; },
  { key = "meta2-23~"; id = "key"; data = "F11"; },
  { key = "F1"; id = "change_window"; data = "1"; },
  { key = "F2"; id = "change_window"; data = "2"; },
  { key = "F3"; id = "change_window"; data = "3"; },
  { key = "F4"; id = "change_window"; data = "4"; },
  { key = "F5"; id = "change_window"; data = "5"; },
  { key = "F6"; id = "change_window"; data = "6"; },
  { key = "F7"; id = "change_window"; data = "7"; },
  { key = "F8"; id = "change_window"; data = "8"; },
  { key = "F9"; id = "change_window"; data = "9"; },
  { key = "F10"; id = "change_window"; data = "10"; },
  { key = "F11"; id = "change_window"; data = "11"; },
  { key = "F12"; id = "change_window"; data = "12"; }
);
windows = {
  1 = {
    name = "ct";
    items = (
      {
        type = "CHANNEL";
        chat_type = "XMPP";
        name = "crowdtilt@conference.jabber.crowdtilt.com";
        tag = "CT";
      }
    );
  };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vim";
        tag = "Freenode";
      }
    );
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#perl";
        tag = "Freenode";
      }
    );
  };
  4 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
};
mainwindows = { 4 = { first_line = "2"; lines = "80"; }; };
